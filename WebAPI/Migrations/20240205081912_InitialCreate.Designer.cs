// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240205081912_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("WebAPI.Models.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 11111L,
                            Name = "Asian"
                        },
                        new
                        {
                            Id = 22222L,
                            Name = "Appollo"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2024, 2, 5, 13, 49, 12, 590, DateTimeKind.Local).AddTicks(320),
                            FirstName = "John",
                            LastName = "Wick",
                            OrganizationId = 11111L,
                            UpdatedAt = new DateTime(2024, 2, 5, 13, 49, 12, 590, DateTimeKind.Local).AddTicks(360)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2024, 2, 5, 13, 49, 12, 590, DateTimeKind.Local).AddTicks(370),
                            FirstName = "John",
                            LastName = "Cena",
                            OrganizationId = 11111L,
                            UpdatedAt = new DateTime(2024, 2, 5, 13, 49, 12, 590, DateTimeKind.Local).AddTicks(370)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2024, 2, 5, 13, 49, 12, 590, DateTimeKind.Local).AddTicks(380),
                            FirstName = "Iron",
                            LastName = "Man",
                            OrganizationId = 22222L,
                            UpdatedAt = new DateTime(2024, 2, 5, 13, 49, 12, 590, DateTimeKind.Local).AddTicks(380)
                        });
                });

            modelBuilder.Entity("WebAPI.Models.ProgressNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PatientId");

                    b.ToTable("ProgressNotes");
                });

            modelBuilder.Entity("WebAPI.Models.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1111,
                            Email = "john1111@abc.com",
                            Name = "john1111",
                            Password = "1111@abc"
                        },
                        new
                        {
                            Id = 2222,
                            Email = "john2222@abc.com",
                            Name = "john2222",
                            Password = "2222@abc"
                        },
                        new
                        {
                            Id = 3333,
                            Email = "john3333@abc.com",
                            Name = "john3333",
                            Password = "3333@abc"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Patient", b =>
                {
                    b.HasOne("WebAPI.Models.Organization", null)
                        .WithMany("Patients")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI.Models.ProgressNote", b =>
                {
                    b.HasOne("WebAPI.Models.Organization", null)
                        .WithMany("ProgressNotes")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Patient", null)
                        .WithMany("ProgressNotes")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI.Models.Organization", b =>
                {
                    b.Navigation("Patients");

                    b.Navigation("ProgressNotes");
                });

            modelBuilder.Entity("WebAPI.Models.Patient", b =>
                {
                    b.Navigation("ProgressNotes");
                });
#pragma warning restore 612, 618
        }
    }
}
